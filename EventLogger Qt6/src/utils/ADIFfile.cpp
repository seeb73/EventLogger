#include "include/utils/ADIFfile.h"
#include <QTextStream>
#include <QDateTime>
#include <QFileInfo>
#include <QIODevice> // jawnie zapewnia typ QIODevice

AdifFileWriter::AdifFileWriter(const QString& directory)
    : directory_(directory)
{
}

QString AdifFileWriter::makeFileName(const QsoData& qso) const
{
    return QString("%1.%2.adi")
    .arg(qso.timeOn.leftJustified(4, '0'))  // HHMM
        .arg(qso.qsoDate);                      // YYYYMMDD
}

void AdifFileWriter::ensureFileHeader(const QString& filePath)
{
    QFileInfo fileInfo(filePath);
    if (fileInfo.exists() && fileInfo.size() > 0)
        return;

    QFile file(filePath);
    if (file.open(QIODevice::WriteOnly | QIODevice::Text | QIODevice::Append)) {
        QTextStream out(&file);
        out << "Generated by EventLogger ADIF Writer\n";
        out << "<ADIF_VER:5>3.1.0 <PROGRAMID:11>EventLogger <EOH>\n";
        file.close();
    }
}

bool AdifFileWriter::appendQsoToFile(const QsoData& qso)
{
    QString filePath = directory_;
    if (!filePath.endsWith('/') && !filePath.endsWith('\\'))
        filePath += '/';

    filePath += makeFileName(qso);
    ensureFileHeader(filePath);

    QFile file(filePath);
    if (!file.open(QIODevice::WriteOnly | QIODevice::Text | QIODevice::Append))
        return false;

    QTextStream out(&file);
    out << makeAdifRow(qso);
    return true;
}



/**
#include "include/utils/ADIFfile.h"
#include <QDir>
#include <QFile>
#include <QTextStream>
#include <QDateTime>
#include <QFileInfo>

AdifFileWriter::AdifFileWriter(const QString& directory)
    : directory_(directory)
{
}

QString AdifFileWriter::makeFileName(const QsoData& qso) const
{
    return QString("%1.%2.adi")
    .arg(qso.timeOn.leftJustified(4, '0'))  // HHMM
        .arg(qso.qsoDate);                      // YYYYMMDD
}

void AdifFileWriter::ensureFileHeader(const QString& filePath)
{
    QFileInfo fileInfo(filePath);
    if (fileInfo.exists() && fileInfo.size() > 0)
        return;

    QFile file(filePath);
    if (file.open(QIODevice::WriteOnly | QIODevice::Text | QIODevice::Append)) {
        QTextStream out(&file);
        out << "Generated by EventLogger ADIF Writer\n";
        out << "<ADIF_VER:5>3.1.0 <PROGRAMID:11>EventLogger <EOH>\n";
        file.close();
    }
}

bool AdifFileWriter::appendQsoToFile(const QsoData& qso)
{
    QString filePath = QDir(directory_).filePath(makeFileName(qso));
    ensureFileHeader(filePath);

    QFile file(filePath);
    if (!file.open(QIODevice::WriteOnly | QIODevice::Text | QIODevice::Append))
        return false;

    QTextStream out(&file);
    out << makeAdifRow(qso);
    return true;
}
**/
